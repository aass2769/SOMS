<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="project.soms.mypage.repository.mapper.AttendanceMapper">
	
	<select id="attendanceCheck" resultType="String">
		select ifnull(attendance_gototime, "null") from attendance
		where employee_no = #{employeeNo}
		and attendance_leavetotime is null
		order by attendance_no desc
		limit 1
	</select>
	
	<select id="getAttendanceRecent" resultType="project.soms.mypage.dto.AttendanceDto">
		SELECT attendance_gotodate, attendance_gototime, IFNULL(attendance_leavetotime, 0) AS attendance_leavetotime
		FROM attendance
		WHERE employee_no = #{employeeNo}
		ORDER BY attendance_no DESC
		LIMIT 1
	</select>
	
	<insert id="attendanceInsert">
		insert into attendance(attendance_gotodate, attendance_gototime, employee_no) 
			values(#{attendanceGotodate}, #{attendanceGototime}, #{attendanceEmployee})
	</insert>
	
	<insert id="attendanceUpdate">
		UPDATE attendance 
		SET attendance_leavetotime = #{attendanceLeavetotime}
		WHERE attendance_no = (
		  SELECT sub.attendance_no 
		  FROM (
		    SELECT attendance_no 
		    FROM attendance 
		    WHERE employee_no = #{attendanceEmployee}
		    ORDER BY attendance_no DESC 
		    LIMIT 1
		  ) AS sub );
	</insert>
	
	<select id="attendanceList" resultType="project.soms.mypage.dto.AttendanceDto">
		select attendance_gotodate, attendance_gototime,  
		CASE WHEN attendance_leavetotime IS NULL THEN 0
    	ELSE attendance_leavetotime
    	END AS attendance_leavetotime
		from attendance
		where employee_no = #{employeeNo}
		and attendance_gotodate like #{selectDate}"%"
		order by attendance_no desc
	</select>
	
	<select id="calAttendance" resultType="project.soms.mypage.dto.AttendanceDto">
		select attendance_gototime,
		CASE WHEN attendance_leavetotime IS NULL THEN 0
    	ELSE attendance_leavetotime
    	END AS attendance_leavetotime
		from attendance
		where attendance_gotodate like #{today}"%"
		and employee_no = #{employeeNo}
		limit 1
	</select>
	
	<select id="getTodayAttendanceExistence" resultType="Integer">
		select Count(*) from attendance
        where attendance_gotodate = #{today}
        and employee_no = #{employeeNo}
        and attendance_leavetotime is not null;
	</select>
	
</mapper>